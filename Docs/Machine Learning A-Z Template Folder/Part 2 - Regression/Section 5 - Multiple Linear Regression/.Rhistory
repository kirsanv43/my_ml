print("hello world")
setwd("~/Documents/ml/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression")
plot(cars)
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
```{r}
plot(cars)
```
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Encoding categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
View(training_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
regressor.summary()
summary(regressor)
newdata
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(test_set)
regressor2 = lm(formula = Profit ~ Marketing.Spend,
data = training_set)
y_pred2 = predict(regressor2, newdata = test_set)
y_pred2
View(test_set)
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Fitting Multiple Linear Regrassion to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Fitting Multiple Linear Regrassion to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set)
summary(regressor)
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Fitting Multiple Linear Regrassion to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
regressor2 = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor2)
regressor3 = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set)
summary(regressor3)
y_pred = predict(regressor, newdata = test_set)
y_pred2 = predict(regressor2, newdata = test_set)
y_pred3 = predict(regressor3, newdata = test_set)
y_pred
y_pred
y_pred3
View(dataset)
View(test_set)
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Fitting Multiple Linear Regrassion to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
regressor2 = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor2)
regressor3 = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set)
summary(regressor3)
regressor4 = lm(formula = Profit ~ R.D.Spend + Marketing.Spend + State,
data = training_set)
summary(regressor4)
y_pred = predict(regressor, newdata = test_set)
y_pred2 = predict(regressor2, newdata = test_set)
y_pred3 = predict(regressor3, newdata = test_set)
y_pred4 = predict(regressor4, newdata = test_set)
y_pred
y_pred2
y_pred3
y_pred4
View(dataset)
